--迭代函数，用于计算技能熟练度
--具体方法：
--根据1级熟练度，升级加速度，级数，重复伤害次数，范围，计算出相应等级熟练度
-- SkillExp(i) = Exp1*a^(i-1)*time*range
function SkillExpFunc(Exp0,a,Level,Time,Range)
	return floor(Exp0*(a^(Level-1))*Time*Range/2)
end

SKILLS={
	congkichvatly={
		physicsenhance_p={{{1,0},{2,0}},},
},
	npcb={
		poisontimereduce_p={{{1,180},{2,180}},{{1,-1},{2,-1}}},
		freezetimereduce_p={{{1,80},{2,80}},{{1,-1},{2,-1}}},
		stuntimereduce_p={{{1,80},{2,80}},{{1,-1},{2,-1}}},
},
	hkt={
		poisontimereduce_p={{{1,50},{2,50}},{{1,-1},{2,-1}}},
		freezetimereduce_p={{{1,50},{2,50}},{{1,-1},{2,-1}}},
		stuntimereduce_p={{{1,50},{2,50}},{{1,-1},{2,-1}}},
},
	st={
	lifereplenish_v={{{1,10},{2,10}},{{1,-1},{2,-1}}},
},
congkichbangnpc={
colddamage_v={
[1]={{1,500*4/50},{2,600*4/50},{3,700*4/50},{4,1000*5/50},{5,1500*8/50},{11,100*8/50},{12,150*8/50},{13,200*8/50},{14,250*8/50},{15,300*8/50},{16,350*8/50},{17,400*8/50},{18,500*8/50},{19,600*8/50},{20,700*8/50},{21,1000*8/50},{22,1500*8/50}},
[2]={{1,18},{5,54},{11,18},{22,54}},
[3]={{1,500*4/50},{2,600*4/50},{3,700*4/50},{4,1000*5/50},{5,1500*8/50},{11,100*8/50},{12,150*8/50},{13,200*8/50},{14,250*8/50},{15,300*8/50},{16,350*8/50},{17,400*8/50},{18,500*8/50},{19,600*8/50},{20,700*8/50},{21,1000*8/50},{22,1500*8/50}},
},
missle_lifetime_v={{{1,18},{20,18}}},
missle_speed_v={{{1,24},{20,24}}},
skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
magicdamage_v={{{1,10},{6,25},{20,25}}},
},


congkichdocnpc={ 
		poisondamage_v={{{1,500/70},{2,600/70},{3,700/70},{4,1000/55},{5,1500/35},{11,100/35},{12,150/35},{13,200/35},{14,250/35},{15,300/35},{16,350/35},{17,400/35},{18,500/35},{19,600/35},{20,700/35},{21,1000/35},{22,1500/35}},{{1,60},{20,60}},{{1,10},{20,10}}},
		missle_speed_v={{{1,24},{20,24}}},
skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
missle_lifetime_v={{{1,18},{20,18}}},
magicdamage_v={{{1,10},{6,25},{20,25}}},
		
	},
congkichhoanpc={
firedamage_v={
[1]={{1,500*6/50},{2,600*6/50},{3,700*6/50},{4,1000*8/50},{5,1500*12/50},{11,100*12/50},{12,150*12/50},{13,200*12/50},{14,250*12/50},{15,300*12/50},{16,350*12/50},{17,400*12/50},{18,500*12/50},{19,600*12/50},{20,700*12/50},{21,1000*12/50},{22,1500*12/50}},
[3]={{1,500*6/50},{2,600*6/50},{3,700*6/50},{4,1000*8/50},{5,1500*12/50},{11,100*12/50},{12,150*12/50},{13,200*12/50},{14,250*12/50},{15,300*12/50},{16,350*12/50},{17,400*12/50},{18,500*12/50},{19,600*12/50},{20,700*12/50},{21,1000*12/50},{22,1500*12/50}},
},
missle_lifetime_v={{{1,18},{20,18}}},
missle_speed_v={{{1,24},{20,24}}},
skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
magicdamage_v={{{1,10},{6,25},{20,25}}},		
	},

congkichthonpc={
lightingdamage_v={
[1]={{1,500*9/100},{2,600*9/100},{3,700*9/100},{4,1000*9/75},{5,1500*9/50},{11,100*9/50},{12,150*9/50},{13,200*9/50},{14,250*9/50},{15,300*9/50},{16,350*9/50},{17,400*9/50},{18,500*9/50},{19,600*9/50},{20,700*9/50},{21,1000*9/50},{22,1500*9/50}},
[3]={{1,500*9/100},{2,600*9/100},{3,700*9/100},{4,1000*9/75},{5,1500*9/50},{11,100*9/50},{12,150*9/50},{13,200*9/50},{14,250*9/50},{15,300*9/50},{16,350*9/50},{17,400*9/50},{18,500*9/50},{19,600*9/50},{20,700*9/50},{21,1000*9/50},{22,1500*9/50}},
},
skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
missle_speed_v={{{1,24},{20,24}}},
magicdamage_v={{{1,10},{6,25},{20,25}}},
missle_lifetime_v={{{1,18},{20,18}}},
stun_p={{{1,10},{5,25},{11,25},{22,30}},{{1,9},{5,27},{11,9},{22,27}}}
},

congkichvatlynpc={
		physicsdamage_v={
[1]={{1,50/5},{2,100/5},{3,200/5},{4,300/5},{5,400/5},{6,600/5},{7,800/5},{8,800/5*2},{9,800/5*4}},
[3]={{1,50/5},{2,100/5},{3,200/5},{4,300/5},{5,400/5},{6,600/5},{7,800/5},{8,800/5*2},{9,800/5*4}}
},
},

congkichkimnpc={
		physicsdamage_v={
[1]={{1,500/5},{2,600/5},{3,700/5},{4,1000/5},{5,1500/5},{11,100/5},{12,150/5},{13,200/5},{14,250/5},{15,300/5},{16,350/5},{17,400/5},{18,500/5},{19,600/5},{20,700/5},{21,1000/5},{22,1500/5}},
[3]={{1,500/5},{2,600/5},{3,700/5},{4,1000/5},{5,1500/5},{11,100/5},{12,150/5},{13,200/5},{14,250/5},{15,300/5},{16,350/5},{17,400/5},{18,500/5},{19,600/5},{20,700/5},{21,1000/5},{22,1500/5}},
},
missle_speed_v={{{1,24},{20,24}}},
missle_lifetime_v={{{1,18},{20,18}}},
skill_misslenum_v={{{1,1},{10,1},{11,16},{12,16}}},
},



congthanh1={
		physicsdamage_v={
[1]={{1,100000},{2,100000}},
[3]={{1,100000},{2,100000}},
}
},



congthanh2={
		firedamage_v={
[1]={{1,200000},{2,30000}},
[3]={{1,200000},{2,30000}},
}
},




congthanh3={
fasthitrecover_v={{{1,1},{20,20}},{{1,18},{2,18}}},
freezetimereduce_p={{{1,1},{20,20}},{{1,18},{2,18}}},
poisontimereduce_p={{{1,1},{20,20}},{{1,18},{2,18}}},
stuntimereduce_p={{{1,1},{20,20}},{{1,18},{2,18}}},
castspeed_v={{{1,1},{20,20}},{{1,18},{2,18}}},
attackspeed_v={{{1,1},{20,20}},{{1,18},{2,18}}}
},




congthanh4={
lifereplenish_v={{{1,1},{20,15}},{{1,18},{2,18}}},
manareplenish_v={{{1,1},{20,10}},{{1,18},{2,18}}},
allres_p={{{1,1},{20,15}},{{1,18},{2,18}}},
lifemax_p={{{1,10},{20,50}},{{1,18*8},{2,18*8}}},
manamax_p={{{1,10},{30,50}},{{1,-1},{2,-1}}}
},






hoinguyencong={
		physicsdamage_v={
			[1]={{1,1},{20,1}},
			[3]={{1,1},{20,1}},
		},
	},
npchotrokim={
lifereplenish_v={{{1,-500*9/10},{2,-1000*9/10},{3,-1500*9/10},{4,-2000*9/10},{5,-3000*9/10},{6,-5000*9/10},{7,-7000*9/10},{8,-9000*9/10},{9,-12000*9/10},{10,-15000*9/10},{21,0},{22,0}},{{1,9},{20,9}}},
		physicsdamage_v={
			[1]={{1,1},{20,1},{21,500*9/10},{22,1000*9/10},{23,1500*9/10},{24,2000*9/10},{25,3000*9/10},{26,5000*9/10},{27,7000*9/10},{28,9000*9/10},{29,12000*9/10},{30,15000*9/10}},
			[3]={{1,1},{20,1},{21,500*9/10},{22,1000*9/10},{23,1500*9/10},{24,2000*9/10},{25,3000*9/10},{26,5000*9/10},{27,7000*9/10},{28,9000*9/10},{29,12000*9/10},{30,15000*9/10}},
		},
	},
npchotromoc={
lifereplenish_v={{{1,-500*7/10},{2,-1000*7/10},{3,-1500*7/10},{4,-2000*7/10},{5,-3000*7/10},{6,-5000*7/10},{7,-7000*7/10},{8,-9000*7/10},{9,-12000*7/10},{10,-15000*7/10},{21,0},{22,0}},{{1,9},{20,9}}},
poisondamage_v={{{1,0},{20,0},{21,100*7/10},{22,200*7/10},{23,300*7/10},{24,400*7/10},{25,600*7/10},{26,1000*7/10},{27,1400*7/10},{28,1800*7/10},{29,2400*7/10},{30,3000*7/10}},{{1,60},{20,60}},{{1,10},{20,10}}},
	},
npchotrothuy={
lifereplenish_v={{{1,-500*7/10},{2,-1000*7/10},{3,-1500*7/10},{4,-2000*7/10},{5,-3000*7/10},{6,-5000*7/10},{7,-7000*7/10},{8,-9000*7/10},{9,-12000*7/10},{10,-15000*7/10},{21,0},{22,0}},{{1,9},{20,9}}},
colddamage_v={
			[1]={{1,0},{20,0},{21,500*7/10},{22,1000*7/10},{23,1500*7/10},{24,2000*7/10},{25,3000*7/10},{26,5000*7/10},{27,7000*7/10},{28,9000*7/10},{29,12000*7/10},{30,15000*7/10}},
[2]={{1,9},{10,36},{21,9},{30,36}},
			[3]={{1,0},{20,0},{21,500*7/10},{22,1000*7/10},{23,1500*7/10},{24,2000*7/10},{25,3000*7/10},{26,5000*7/10},{27,7000*7/10},{28,9000*7/10},{29,12000*7/10},{30,15000*7/10}},
		},
	},
npchotrohoa={
lifereplenish_v={{{1,-500},{2,-1000},{3,-1500},{4,-2000},{5,-3000},{6,-5000},{7,-7000},{8,-9000},{9,-12000},{10,-15000},{21,0},{22,0}},{{1,9},{20,9}}},
		firedamage_v={
			[1]={{1,0},{20,0},{21,500},{22,1000},{23,1500},{24,2000},{25,3000},{26,5000},{27,7000},{28,9000},{29,12000},{30,15000}},
			[3]={{1,0},{20,0},{21,500},{22,1000},{23,1500},{24,2000},{25,3000},{26,5000},{27,7000},{28,9000},{29,12000},{30,15000}},
		},
	},
npchotrotho={
lifereplenish_v={{{1,-500*8/10},{2,-1000*8/10},{3,-1500*8/10},{4,-2000*8/10},{5,-3000*8/10},{6,-5000*8/10},{7,-7000*8/10},{8,-9000*8/10},{9,-12000*8/10},{10,-15000*8/10},{21,0},{22,0}},{{1,9},{20,9}}},
		stun_p={{{1,15},{10,30},{21,15},{30,30}},{{1,9},{10,18},{21,9},{30,18}}},
lightingdamage_v={
			[1]={{1,0},{20,0},{21,500*8/10},{22,1000*8/10},{23,1500*8/10},{24,2000*8/10},{25,3000*8/10},{26,5000*8/10},{27,7000*8/10},{28,9000*8/10},{29,12000*8/10},{30,15000*8/10}},
			[3]={{1,0},{20,0},{21,500*8/10},{22,1000*8/10},{23,1500*8/10},{24,2000*8/10},{25,3000*8/10},{26,5000*8/10},{27,7000*8/10},{28,9000*8/10},{29,12000*8/10},{30,15000*8/10}},
		},
	},

vsdcnpc={
lifereplenish_v={{{1,0},{2,0}},{{1,-1},{2,-1}}},
	},

}
-----------------------------------------------
--Create by yfeng 2004-05-20
-----------------------------------------------

-----------------------------------------------
--根据2个点，求线形函数f(x)=k*x+b
--y= (y2-y1)*(x-x1)/(x2-x1)+y1
--当x2=x1, 有x=c,该直线是一条垂直于x轴的直线
--这是可以取得y=任意值
--因此，如果已知两点(x1,y1),(x2,y2)可求得过此2点的
--函数为：
function Line(x,x1,y1,x2,y2)
	if(x2==x1) then
		return y2
	end
	return (y2-y1)*(x-x1)/(x2-x1)+y1
end

-----------------------------------------------
--根据2个点，求2次形函数f(x)=a*x2+c
--y= (y2-y1)*x*x/(x2*x2-x1*x1)-(y2-y1)*x1*x1/(x2*x2-x1*x1)+y1
--当x1或者x2 < 0 ,y =0
--当x2=x1, 有x=c,是一条垂直于x轴的直线
--这是可以取得y=任意值
--因此，如果已知两点(x1,y1),(x2,y2)可求得过此2点的
--函数为：extrac
function Conic(x,x1,y1,x2,y2)
	if((x1 < 0) or (x2<0))then 
		return 0
	end
	if(x2==x1) then
		return y2
	end
	return (y2-y1)*x*x/(x2*x2-x1*x1)-(y2-y1)*x1*x1/(x2*x2-x1*x1)+y1
end

-----------------------------------------------
--根据2个点，求-2次形函数f(x)=a*sqrt(x2)+c
--y=(y2-y1)*x/(sqrt(x2)-sqrt(x1))+y1-(y2-y1)/((sqrt(x2)-sqrt(x1))
--当x2或者x1<0, y=0,
--当x1=x2,有x=c,是一条垂直于x轴的直线
--这是可以取得y=任意值
--因此，如果已知两点(x1,y1),(x2,y2)可求得过此2点的
--函数为：extrac
function Extrac(x,x1,y1,x2,y2)
	if((x1 < 0) or (x2<0))then 
		return 0
	end
	if(x2==x1) then
		return y2
	end
	return (y2-y1)*(x-x1)/(x2-x1)+y1
end

-----------------------------------------------
--描绘连接线:Link(x,points)
--根据points提供的一系列点，用相邻的两个点描绘曲线
--return y值
--x 输入值
--points 点集合
--形如：points是形如{{x1,y1,func=xxx},{x2,y2,func=xxx},...{xn,yn,func=xxx}}的映射
function Link(x,points)
	num = getn(points)
	if(num<2) then
		return -1
	end
	for i=1,num do
		if(points[i][3]==nil) then
			points[i][3]=Line
		end
	end
	if(x < points[1][1]) then
		return points[1][3](x,points[1][1],points[1][2],points[2][1],points[2][2])
	end
	if(x > points[num][1]) then
		return points[num][3](x,points[num-1][1],points[num-1][2],points[num][1],points[num][2])
	end
	
	c = 2
	for i=2,num do
		if((x >= points[i-1][1]) and (x <= points[i][1])) then
			c = i
			break
		end
	end
	return points[c][3](x,points[c-1][1],points[c-1][2],points[c][1],points[c][2])
end

------------------------------------------------------
--技能设定格式如下：
--SKILLS={
--	技能名称=	{
--		魔法属性=	{
--			[1]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[2]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[3]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，	
--		}，
--		魔法属性=	{
--			[1]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[2]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[3]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，	
--		}，
--		。。。。。
--	}，
--	技能名称=	{
--		魔法属性=	{
--			[1]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[2]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[3]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，	
--		}，
--		魔法属性=	{
--			[1]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[2]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，
--			[3]={{级别,数值，曲线}，{级别，数值，曲线}，。。。。}，	
--		}，
--		。。。。。
--	}，
--	。。。。。
--}
--如：
--SKILLS={
--	Sanhuan-taoyue={
--		physicsenhance_p={
--			[1]={{1,50},{20,335}},--魔法属性physicsenhance_p参数1，1级时为35，20级时为335，曲线不填，默认线形
--			[2]={{1,0},{20,0}},
--		},--没有[3]，表示魔法属性physicsenhance_p参数2，默认为任何时候都是0
--		lightingdamage_v={
--			[1]={{1,65},{20,350}},
--			[3]={{1,65},{20,350}},
--		}
--	}
--}
--以上描述技能“三环套月”的魔法属性和数值
-----------------------------------------------------------
--函数GetSkillLevelData(levelname, data, level)
--levelname：魔法属性名称
--data：技能名称
--level：技能等级
--return：当技能名称为data，技能等级为level
--			时的魔法属性levelname所需求的三个参数的具体值
-----------------------------------------------------------
function GetSkillLevelData(levelname, data, level)
	if(data==nil) then
		return ""
	end
	if(data == "") then
		return ""
	end
	if(SKILLS[data]==nil) then
		return ""
	end
	if(SKILLS[data][levelname]==nil) then
		return ""
	end
	if(SKILLS[data][levelname][1]==nil) then
		SKILLS[data][levelname][1]={{0,0},{20,0}}
	end
	if(SKILLS[data][levelname][2]==nil) then
		SKILLS[data][levelname][2]={{0,0},{20,0}}
	end
	if(SKILLS[data][levelname][3]==nil) then
		SKILLS[data][levelname][3]={{0,0},{20,0}}
	end
	p1=floor(Link(level,SKILLS[data][levelname][1]))
	p2=floor(Link(level,SKILLS[data][levelname][2]))
	p3=floor(Link(level,SKILLS[data][levelname][3]))
	return Param2String(p1,p2,p3)
end;


function Param2String(Param1, Param2, Param3)
return Param1..","..Param2..","..Param3
end;

